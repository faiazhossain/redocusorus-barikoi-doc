openapi: 3.0.0
info:
  title: Barikoi Business API
  license:
    name: Barikoi
    url: "https://www.barikoi.com/"
  description: >

    # Introduction

    Welcome to Barikoi API. Thank you for checking a Bangladeshi location data provider API. Our API Helps you to find address, geocode and reverse geocode place and city corporation information in Dhaka in our local context.

    # Overview

    The currently listed Places API's are for autocomplete, post office autocomplete, geocoding, reverse geocoding, nearby, distance & rupantor geocoder. And City Corporation API's are Ward by Geolocation, Zone by Geolocation, Ward and Zone by Geolocation, City Corporation by Geolocation services:

     * [Reverse Geocode API](#tag/Reverse-Geocoding),
     * [Reverse Geocoding (Server) API](),
     * [Geocoding API](),
     * [Autocomplete API](#tag/Autocomplete),
     * [Nearby API](#tag/Nearby),
     * [Distance API]()
     * [Rupantor Geocoder API](#tag/Rupantor).
     * [Routing API](#tag/Routing),
     * [District API](),
     * [Sub-District API](),
     * [City API](),
     * [Union API](),
     * [Area API]()

    # Explore our APIs

    ## Get started

    [Create an API key](https://developer.barikoi.com/register)


    Each API part has its own documentation. Jump to the desired API part and
    learn about the API through the given examples and tutorials.


    In addition, for each API there are specific sample requests that you can
    send via Insomnia or Postman to see what the requests and responses look
    like.

    ## API Usage Clarification

    A single API request and a single API call are not always the same. A single API request to the server might call multiple APIs. An API might depend on other internal APIs to deliver the desired response. The number of call depends on the number of parameters of a request and the number of internal API calls needed to make to provide the desired response. For instance, A single request to Rupantor API results in two API calls since Rupantor API uses geocode API to operate. Routing API follows the same formalities as Rupantor.
    For any query or tech support please mail at support@barikoi.com



    ## Contact Us


    If you have problems or questions, please read the following information:

  version: 2.0.0
  termsOfService: https://www.barikoi.com/data-privacy
  contact:
    name: API Support
    email: hello@barikoi.com
    url: https://www.barikoi.com/
  x-logo:
    url: barikoi.png
    altText: Barikoi

servers:
  - url: https://barikoi.xyz/v2/api

# tags:
#   - name: Reverse Geocode API
#     description: >

#       ## Quickstart

#       This API initially returns id, address, area, city, distance_within_meters without any additional call. Valid additional parameters are.

#   - name: Nearby API
#     description: >

#       ## Quickstart

#       All Nearby API counts according to the limit parameter or number of places returned in response data.

#   - name: Autocomplete API
#     description: >

#       ## Quickstart

#       Barikoi Autocomplete return's a place's id, longitude, latitude, address, city, area, postCode, pType & uCode.

security:
  - api_key: []
paths:
  /search/reverse/geocode:
    get:
      operationId: revgeo
      tags:
        - Reverse Geocoding
      summary: Reverse Geocoding API
      description: This API initially returns id, address, area, city, distance_within_meters without any additional call.For each request of Reverse Geocoding with all parameter 11 API call is counted.
      parameters:
        - $ref: "#/"
        - $ref: "#/components/parameters/longitudeParam"
        - $ref: "#/components/parameters/latitudeParam"
        - $ref: "#/components/parameters/districtParam"
        - $ref: "#/components/parameters/post_codeParam"
        - $ref: "#/components/parameters/countryParam"
        - $ref: "#/components/parameters/sub_districtParam"
        - $ref: "#/components/parameters/unionParam"
        - $ref: "#/components/parameters/pauroshovaParam"
        - $ref: "#/components/parameters/location_typeParam"
        - $ref: "#/components/parameters/divisionParam"
        - $ref: "#/components/parameters/addressParam"
        - $ref: "#/components/parameters/areaParam"
        - $ref: "#/components/parameters/banglaParam"
      x-code-samples:
        - lang: Curl
          source: >-
            curl --location --request GET 'https://barikoi.xyz/v2/api/search/reverse/geocode?longitude=90.36744611263278&latitude=23.81970957278533&district=true&post_code=true&country=true&sub_district=true&union=true&pauroshova=true&location_type=true&division=true&address=true&area=true&api_key=<BARIKOI_API_KEY>'
      responses:
        "200":
          $ref: "#/components/responses/rev_geo_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  /search/reverse/geocode/server:
    get:
      operationId: revgeos
      tags:
        - Reverse Geocoding
      summary: Reverse Geocoding API(server)
      description: This API initially returns id, address, area, city, distance_within_meters without any additional call.For each request of Reverse Geocoding with all parameter 11 API call is counted.
      parameters:
        - $ref: "#/"
        - $ref: "#/components/parameters/longitudeParam"
        - $ref: "#/components/parameters/latitudeParam"
        - $ref: "#/components/parameters/districtParam"
        - $ref: "#/components/parameters/post_codeParam"
        - $ref: "#/components/parameters/countryParam"
        - $ref: "#/components/parameters/sub_districtParam"
        - $ref: "#/components/parameters/unionParam"
        - $ref: "#/components/parameters/pauroshovaParam"
        - $ref: "#/components/parameters/location_typeParam"
        - $ref: "#/components/parameters/divisionParam"
        - $ref: "#/components/parameters/addressParam"
        - $ref: "#/components/parameters/areaParam"
        - $ref: "#/components/parameters/banglaParam"
      x-code-samples:
        - lang: Curl
          source: >-
            curl --location --request GET 'https://barikoi.xyz/v2/api/search/reverse/server?longitude=90.36744611263278&latitude=23.81970957278533&district=true&post_code=true&country=true&sub_district=true&union=true&pauroshova=true&location_type=true&division=true&address=true&area=true&api_key=<BARIKOI_API_KEY>'
      responses:
        "200":
          $ref: "#/components/responses/rev_geo_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  /search/nearby/{distance}/{limit}:
    get:
      operationId: nearby
      tags:
        - Nearby
      summary: Nearby API
      description: All Nearby API counts according to the limit parameter or number of places returned in response data.
      parameters:
        - $ref: "#/components/parameters/api_keyParam"
        - $ref: "#/components/parameters/longitudeParam"
        - $ref: "#/components/parameters/latitudeParam"
        - $ref: "#/components/parameters/distanceParam"
        - $ref: "#/components/parameters/limitParam"
      x-code-samples:
        - lang: Curl
          source: >-
            curl --location --request GET 'https://barikoi.xyz/v2/api/search/nearby/0.5/10?api_key=<BARIKOI_API_KEY>&longitude=90.38305163&latitude=23.87188719'
      responses:
        "200":
          $ref: "#/components/responses/nearby_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  /search/nearby/category/{distance}/{limit}:
    get:
      operationId: nearby_category
      tags:
        - Nearby
      summary: Nearby API with Category
      description: All Nearby API counts according to the limit parameter or number of places returned in response data.
      parameters:
        - $ref: "#/components/parameters/api_keyParam"
        - $ref: "#/components/parameters/longitudeParam"
        - $ref: "#/components/parameters/latitudeParam"
        - $ref: "#/components/parameters/distanceParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/ptypeParam"
      x-code-samples:
        - lang: Curl
          source: >-
            curl --location --request GET 'https://barikoi.xyz/v2/api/search/nearby/category/1/10?api_key=<BARIKOI_API_KEY>&longitude=90.36668110638857&latitude=23.83723803415923&ptype=School'
      responses:
        "200":
          $ref: "#/components/responses/nearby_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  /search/nearby/multi/type/{distance}/{limit}:
    get:
      operationId: nearby_multiple_types
      tags:
        - Nearby
      summary: Nearby API with Multiple Types
      description: All Nearby API counts according to the limit parameter or number of places returned in response data.
      parameters:
        - $ref: "#/components/parameters/api_keyParam"
        - $ref: "#/components/parameters/longitudeParam"
        - $ref: "#/components/parameters/latitudeParam"
        - $ref: "#/components/parameters/distanceParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/qParam"
      x-code-samples:
        - lang: Curl
          source: >-
            curl --location --request GET 'https://barikoi.xyz/v2/api/search/nearby/multi/type/5/5?api_key=<BARIKOI_API_KEY>&q=School,ATM&longitude=90.36668110638857&latitude=23.83723803415923'
      responses:
        "200":
          $ref: "#/components/responses/nearby_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  /search/autocomplete/place:
    get:
      operationId: autocomplete
      tags:
        - Autocomplete
      summary: AutoComplete
      description: Barikoi Autocomplete return's a place's id, longitude, latitude, address, city, area, postCode, pType & uCode
      parameters:
        - $ref: "#/components/parameters/api_keyParam"
        - $ref: "#/components/parameters/qParam"
      responses:
        "200":
          $ref: "#/components/responses/autocomplete_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  # RECHECK
  /search/autocomplete/place/city:
    get:
      operationId: autocomplete_city_filter
      tags:
        - Autocomplete
      summary: Autocomplete API With City Filter
      description: Autocomplete API With City Filter returns a place's id, longitude, latitude, address, city, area, postCode, pType & uCode within the city given.
      parameters:
        - $ref: "#/components/parameters/api_keyParam"
        - $ref: "#/components/parameters/qParam"
        - $ref: "#/components/parameters/cityParam"
      responses:
        "200":
          $ref: "#/components/responses/autocomplete_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  # RECHECK
  /search/autocomplete/places/bangla:
    get:
      operationId: autocomplete_bangla
      tags:
        - Autocomplete
      summary: Bangla Autocomplete API
      description: Barikoi Bangla Autocomplete API will return places holding place's id, longitude, latitude, address, address_bn, city, city_bn, area, area_bn, postCode, pType & uCode in response. Return bangla address and area along with others.
      parameters:
        - $ref: "#/components/parameters/api_keyParam"
        - $ref: "#/components/parameters/qParam"
        - $ref: "#/components/parameters/banglaParam"
      responses:
        "200":
          $ref: "#/components/responses/autocomplete_bangla_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  /search/rupantor/geocode:
    post:
      operationId: rupantor_geocoder
      tags:
        - Rupantor
      summary: Rupantor Geocoder
      description: Rupantor Geocoder API for Developers. It formats the given address and searches for the address and gives a status if the address is complete or not. Rupantor Geocoder only supports FormData. So use FormData object to send your data. Rupantor Geocoder needs Geocode API to fucntion properly. One Rupantor Geocoder request requires two Geocode API requests.
      parameters:
        - $ref: "#/components/parameters/api_keyParam"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/rupantor_geocoder_form"
      responses:
        "200":
          $ref: "#/components/responses/rupantor_geocoder_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  # RECHECK
  /search/rupantor/geocode/match:
    post:
      operationId: rupantor_address_match
      tags:
        - Rupantor
      summary: Rupantor Address Match
      description: Rupantor Address Matcher API matches two different given address and returns match percantage and match status.
      parameters:
        - $ref: "#/components/parameters/api_keyParam"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/rupantor_address_match_form"
      responses:
        "200":
          $ref: "#/components/responses/rupantor_address_match_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  /route/{coordinates}:
    get:
      operationId: routing
      tags:
        - Routing
      summary: Routing
      description: This api provides routing details for two location points.
      parameters:
        - $ref: "#/components/parameters/api_keyParam"
        - $ref: "#/components/parameters/geometriesParam"
        - $ref: "#/components/parameters/coordinatesParam"
      x-code-samples:
        - lang: Curl
          source: >-
            curl --location --request GET 'https://barikoi.xyz/v2/api/route/90.362548828125,23.94107556246209;90.31585693359375,24.134221690669204?api_key=<BARIKOI_API_KEY>'
      responses:
        "200":
          $ref: "#/components/responses/routing_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  /route/optimized:
    post:
      operationId: route_optimization
      tags:
        - Routing
      summary: Route Optimization
      description: |+
        This api provides routing details from source to destination points. Additional waypoints can also be included in order to get more precise routing experience. Maximum 50 waypoints can be included as additional points. Content-Types:application/json should be attached to the request header in order to match the correct request format.

        Note: Waypoints will be sorted based on given id in ascending order.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/route_optimization_body"
      x-code-samples:
        - lang: Curl
          source: >-
            curl --location --request POST 'https://barikoi.xyz/v2/api/route/optimized' \
            --data-raw '{
                "api_key": "<BARIKOI_API_KEY>",
                "source": "23.746086,90.37368",
                "destination": "23.746214,90.371654",
                "profile": "car",
                "geo_points": [
                    {
                        "id": 1,
                        "point": "23.746086,90.37368"
                    },
                    {
                        "id": 2,
                        "point": "23.74577,90.373389"
                    },
                    {
                        "id": 3,
                        "point": "23.74442,90.372909"
                    },
                    {
                        "id": 4,
                        "point": "23.743961,90.37214"
                    }
                ]
            }'
      responses:
        "200":
          $ref: "#/components/responses/route_optimization_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  /route/sorted:
    post:
      operationId: location_optimized
      tags:
        - Routing
      summary: Location Optimized
      description: Location sorting api takes a set of locations with additional payload attached with each location considering the first one as the source and the last one as the destination. It returns with the sorted location set that was provided considering the distance between the locations in Kilometers from source to destination. Maximum 50 locations can be attached in a row. Content-Types:application/json should be attached to the request header in order to match the correct request format.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/location_optimized_body"
      x-code-samples:
        - lang: Curl
          source: >-
            curl --location --request POST 'https://barikoi.xyz/v2/api/route/sorted' \
            --data-raw '{
                "api_key": "<BARIKOI_API_KEY>",
                "locations": [
                    {"point": {"lat": 24.439648,"lon" : 90.731277}, "additional_payload" : [{"address" : "Kishoreganj Thana"}]},
                    {"point": {"lat": 23.74608583,"lon" : 90.37368}, "additional_payload" : [{"address" : "House 36, Road 9/A"}]},
                    {"point": {"lat": 24.440899,"lon" : 90.771103}, "additional_payload" : [{"address" : "Monju Villa, House 1244, Hossainpur Road, Nogua"}]},
                    {"point": {"lat": 23.74577034,"lon" : 90.37338898}, "additional_payload" : [{"address" : "House 38, Road 9/A"}]},
                    {"point": {"lat": 23.74441997,"lon" : 90.37290861}, "additional_payload" : [{"address" : "Dhanmondi, Road 8/a"}]}
                ]
            }'
      responses:
        "200":
          $ref: "#/components/responses/location_optimized_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  /routing/nearest:
    get:
      operationId: snap_to_road
      tags:
        - Routing
      summary: Snap to Road
      # RECHECK
      description: NO DESCRIPTION FOUND
      parameters:
        - $ref: "#/components/parameters/api_keyParam"
        - $ref: "#/components/parameters/pointParam"
      x-code-samples:
        - lang: Curl
          source: >-
            curl --location --request GET 'https://barikoi.xyz/v2/api/routing/nearest?point=23.806525320635505,90.36129978225671&api_key=<BARIKOI_API_KEY>'
      responses:
        "200":
          $ref: "#/components/responses/snap_to_road_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

  /routing/matching:
    get:
      operationId: route_match
      tags:
        - Routing
      summary: Route Match
      # RECHECK
      description: NO DESCRIPTION FOUND
      parameters:
        - $ref: "#/components/parameters/api_keyParam"
        - $ref: "#/components/parameters/pointsParam"
      x-code-samples:
        - lang: Curl
          source: >-
            curl --location --request GET 'https://barikoi.xyz/v2/api/routing/matching?points=90.38436119310136,23.7267599142696;90.38438265469962,23.726622279057658&api_key=<BARIKOI_API_KEY>'
      responses:
        "200":
          $ref: "#/components/responses/route_match_success"
        "400":
          $ref: "#/components/responses/missing_parameter"
        "401":
          $ref: "#/components/responses/no_registered_key"
        "402":
          $ref: "#/components/responses/payment_exception"
        "429":
          $ref: "#/components/responses/api_limit_exceeded"

components:
  securitySchemes:
    $ref: "schemas/api_key.yaml"
  parameters:
    api_keyParam:
      $ref: params/api_key.yaml
    longitudeParam:
      $ref: params/longitude.yaml
    latitudeParam:
      $ref: params/latitude.yaml
    districtParam:
      $ref: params/district.yaml
    cityParam:
      $ref: params/city.yaml
    post_codeParam:
      $ref: params/post_code.yaml
    countryParam:
      $ref: params/country.yaml
    sub_districtParam:
      $ref: params/sub_district.yaml
    unionParam:
      $ref: params/union.yaml
    pauroshovaParam:
      $ref: params/pauroshova.yaml
    location_typeParam:
      $ref: params/location_type.yaml
    divisionParam:
      $ref: params/division.yaml
    addressParam:
      $ref: params/address.yaml
    areaParam:
      $ref: params/area.yaml
    banglaParam:
      $ref: params/bangla.yaml
    distanceParam:
      $ref: params/distance.yaml
    limitParam:
      $ref: params/limit.yaml
    ptypeParam:
      $ref: params/ptype.yaml
    qParam:
      $ref: params/q.yaml
    pointParam:
      $ref: params/point.yaml
    pointsParam:
      $ref: params/points.yaml
    geometriesParam:
      $ref: params/geometries.yaml
    coordinatesParam:
      $ref: params/coordinates.yaml

  schemas:
    api_limit_exceeded:
      $ref: schemas/api_limit_exceeded.yaml
    no_registered_key:
      $ref: schemas/no_registered_key.yaml
    missing_parameter:
      $ref: schemas/missing_parameter.yaml
    payment_exception:
      $ref: schemas/payment_exception.yaml
    rev_geo_success:
      $ref: schemas/rev_geo_success.yaml
    nearby_success:
      $ref: schemas/nearby_success.yaml
    autocomplete_success:
      $ref: schemas/autocomplete_success.yaml
    autocomplete_bangla_success:
      $ref: schemas/autocomplete_bangla_success.yaml
    rupantor_geocoder_form:
      $ref: schemas/rupantor_geocoder_form.yaml
    rupantor_geocoder_success:
      $ref: schemas/rupantor_geocoder_success.yaml
    rupantor_address_match_form:
      $ref: schemas/rupantor_address_match_form.yaml
    rupantor_address_match_success:
      $ref: schemas/rupantor_address_match_success.yaml
    routing_success:
      $ref: schemas/routing_success.yaml
    route_optimization_body:
      $ref: schemas/route_optimization_body.yaml
    route_optimization_success:
      $ref: schemas/route_optimization_success.yaml
    location_optimized_body:
      $ref: schemas/location_optimized_body.yaml
    location_optimized_success:
      $ref: schemas/location_optimized_success.yaml
    snap_to_road_success:
      $ref: schemas/snap_to_road_success.yaml
    route_match_success:
      $ref: schemas/route_match_success.yaml

  responses:
    rev_geo_success:
      $ref: responses/rev_geo_success.yaml
    nearby_success:
      $ref: responses/nearby_success.yaml
    autocomplete_success:
      $ref: responses/autocomplete_success.yaml
    autocomplete_bangla_success:
      $ref: responses/autocomplete_bangla_success.yaml
    rupantor_geocoder_success:
      $ref: responses/rupantor_geocoder_success.yaml
    rupantor_address_match_success:
      $ref: responses/rupantor_address_match_success.yaml
    routing_success:
      $ref: responses/routing_success.yaml
    route_optimization_success:
      $ref: responses/route_optimization_success.yaml
    location_optimized_success:
      $ref: responses/location_optimized_success.yaml
    snap_to_road_success:
      $ref: responses/span_to_road_success.yaml
    route_match_success:
      $ref: responses/route_match_success.yaml
    api_limit_exceeded:
      $ref: responses/api_limit_exceeded.yaml
    no_registered_key:
      $ref: responses/no_registered_key.yaml
    missing_parameter:
      $ref: responses/missing_parameter.yaml
    payment_exception:
      $ref: responses/payment_exception.yaml
